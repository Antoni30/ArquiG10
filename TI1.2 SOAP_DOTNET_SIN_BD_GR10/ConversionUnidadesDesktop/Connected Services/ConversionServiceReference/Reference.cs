//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConversionUnidadesDesktop.ConversionServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConversionServiceReference.IConversionService")]
    public interface IConversionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CentimetrosAMetros", ReplyAction="http://tempuri.org/IConversionService/CentimetrosAMetrosResponse")]
        double CentimetrosAMetros(double centimetros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CentimetrosAMetros", ReplyAction="http://tempuri.org/IConversionService/CentimetrosAMetrosResponse")]
        System.Threading.Tasks.Task<double> CentimetrosAMetrosAsync(double centimetros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/MetrosACentimetros", ReplyAction="http://tempuri.org/IConversionService/MetrosACentimetrosResponse")]
        double MetrosACentimetros(double metros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/MetrosACentimetros", ReplyAction="http://tempuri.org/IConversionService/MetrosACentimetrosResponse")]
        System.Threading.Tasks.Task<double> MetrosACentimetrosAsync(double metros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/MetrosAKilometros", ReplyAction="http://tempuri.org/IConversionService/MetrosAKilometrosResponse")]
        double MetrosAKilometros(double metros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/MetrosAKilometros", ReplyAction="http://tempuri.org/IConversionService/MetrosAKilometrosResponse")]
        System.Threading.Tasks.Task<double> MetrosAKilometrosAsync(double metros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/ToneladaALibra", ReplyAction="http://tempuri.org/IConversionService/ToneladaALibraResponse")]
        double ToneladaALibra(double tonelada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/ToneladaALibra", ReplyAction="http://tempuri.org/IConversionService/ToneladaALibraResponse")]
        System.Threading.Tasks.Task<double> ToneladaALibraAsync(double tonelada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KilogramoALibra", ReplyAction="http://tempuri.org/IConversionService/KilogramoALibraResponse")]
        double KilogramoALibra(double kilogramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KilogramoALibra", ReplyAction="http://tempuri.org/IConversionService/KilogramoALibraResponse")]
        System.Threading.Tasks.Task<double> KilogramoALibraAsync(double kilogramo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/GramoAKilogramo", ReplyAction="http://tempuri.org/IConversionService/GramoAKilogramoResponse")]
        double GramoAKilogramo(double gramos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/GramoAKilogramo", ReplyAction="http://tempuri.org/IConversionService/GramoAKilogramoResponse")]
        System.Threading.Tasks.Task<double> GramoAKilogramoAsync(double gramos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusAFahrenheit", ReplyAction="http://tempuri.org/IConversionService/CelsiusAFahrenheitResponse")]
        double CelsiusAFahrenheit(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusAFahrenheit", ReplyAction="http://tempuri.org/IConversionService/CelsiusAFahrenheitResponse")]
        System.Threading.Tasks.Task<double> CelsiusAFahrenheitAsync(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FahrenheitACelsius", ReplyAction="http://tempuri.org/IConversionService/FahrenheitACelsiusResponse")]
        double FahrenheitACelsius(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FahrenheitACelsius", ReplyAction="http://tempuri.org/IConversionService/FahrenheitACelsiusResponse")]
        System.Threading.Tasks.Task<double> FahrenheitACelsiusAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusAKelvin", ReplyAction="http://tempuri.org/IConversionService/CelsiusAKelvinResponse")]
        double CelsiusAKelvin(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusAKelvin", ReplyAction="http://tempuri.org/IConversionService/CelsiusAKelvinResponse")]
        System.Threading.Tasks.Task<double> CelsiusAKelvinAsync(double celsius);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConversionServiceChannel : ConversionUnidadesDesktop.ConversionServiceReference.IConversionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConversionServiceClient : System.ServiceModel.ClientBase<ConversionUnidadesDesktop.ConversionServiceReference.IConversionService>, ConversionUnidadesDesktop.ConversionServiceReference.IConversionService {
        
        public ConversionServiceClient() {
        }
        
        public ConversionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConversionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CentimetrosAMetros(double centimetros) {
            return base.Channel.CentimetrosAMetros(centimetros);
        }
        
        public System.Threading.Tasks.Task<double> CentimetrosAMetrosAsync(double centimetros) {
            return base.Channel.CentimetrosAMetrosAsync(centimetros);
        }
        
        public double MetrosACentimetros(double metros) {
            return base.Channel.MetrosACentimetros(metros);
        }
        
        public System.Threading.Tasks.Task<double> MetrosACentimetrosAsync(double metros) {
            return base.Channel.MetrosACentimetrosAsync(metros);
        }
        
        public double MetrosAKilometros(double metros) {
            return base.Channel.MetrosAKilometros(metros);
        }
        
        public System.Threading.Tasks.Task<double> MetrosAKilometrosAsync(double metros) {
            return base.Channel.MetrosAKilometrosAsync(metros);
        }
        
        public double ToneladaALibra(double tonelada) {
            return base.Channel.ToneladaALibra(tonelada);
        }
        
        public System.Threading.Tasks.Task<double> ToneladaALibraAsync(double tonelada) {
            return base.Channel.ToneladaALibraAsync(tonelada);
        }
        
        public double KilogramoALibra(double kilogramo) {
            return base.Channel.KilogramoALibra(kilogramo);
        }
        
        public System.Threading.Tasks.Task<double> KilogramoALibraAsync(double kilogramo) {
            return base.Channel.KilogramoALibraAsync(kilogramo);
        }
        
        public double GramoAKilogramo(double gramos) {
            return base.Channel.GramoAKilogramo(gramos);
        }
        
        public System.Threading.Tasks.Task<double> GramoAKilogramoAsync(double gramos) {
            return base.Channel.GramoAKilogramoAsync(gramos);
        }
        
        public double CelsiusAFahrenheit(double celsius) {
            return base.Channel.CelsiusAFahrenheit(celsius);
        }
        
        public System.Threading.Tasks.Task<double> CelsiusAFahrenheitAsync(double celsius) {
            return base.Channel.CelsiusAFahrenheitAsync(celsius);
        }
        
        public double FahrenheitACelsius(double fahrenheit) {
            return base.Channel.FahrenheitACelsius(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitACelsiusAsync(double fahrenheit) {
            return base.Channel.FahrenheitACelsiusAsync(fahrenheit);
        }
        
        public double CelsiusAKelvin(double celsius) {
            return base.Channel.CelsiusAKelvin(celsius);
        }
        
        public System.Threading.Tasks.Task<double> CelsiusAKelvinAsync(double celsius) {
            return base.Channel.CelsiusAKelvinAsync(celsius);
        }
    }
}
